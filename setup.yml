---
- name: Setup
  hosts: local
  become: true
  become_user: root
  environment:
    HOME: '/home/thiago'
  vars:
    go_tarball: "go1.15.3.linux-amd64.tar.gz"
    go_tarball_checksum: "sha256:010a88df924a81ec21b293b5da8f9b11c176d27c0ee3962dc1738d2352d3c02d"
    go_version_target: "go version go1.8.1 linux/amd64"
    go_download_location: "https://golang.org/dl/{{ go_tarball }}"
  tasks:
    - name: Install basepackages
      apt:
        name:
          - xclip
          - vim
        state: present

    - name: Add spotify signing key
      apt_key:
        url: https://download.spotify.com/debian/pubkey_0D811D58.gpg
        state: present

    - name: Add Spotify repository
      apt_repository: 
        repo: deb http://repository.spotify.com stable non-free
        filename: spotify-client
        state: present

    - name: Install spotify
      apt:
       name: spotify-client
       state: present

    - name: Add chrome signing key
      apt_key:
        url: https://dl-ssl.google.com/linux/linux_signing_key.pub        
        state: present

    - name: Add chrome repository
      apt_repository: 
        repo: deb http://dl.google.com/linux/chrome/deb/ stable main
        filename: google-chrome
        state: present

    - name: Install chrome
      apt: 
        name: google-chrome-stable 
        state: present

    - name: zoom dependencies
      apt:
        name:
          - libglib2.0-0
          - libgstreamer-plugins-base1.0-0
          - libxcb-shape0
          - libxcb-shm0
          - libxcb-xfixes0
          - libxcb-randr0
          - libxcb-image0
          - libfontconfig1
          - libgl1-mesa-glx
          - libxi6
          - libsm6
          - libxrender1
          - libpulse0
          - libxcomposite1
          - libxslt1.1
          - libsqlite3-0
          - libxcb-keysyms1
          - libxcb-xtest0
        state: present

    - name: Install zoom
      apt: 
        deb: https://zoom.us/client/latest/zoom_amd64.deb

    - name: Install asdf
      become: no
      command: git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.8.0
      args:
        creates: $HOME/.asdf/asdf.sh

    - name: asdf erlang deps
      apt:
        name:
          - build-essential 
          - autoconf 
          - m4 
          - libncurses5-dev 
          - libwxgtk3.0-gtk3-dev 
          - libgl1-mesa-dev 
          - libglu1-mesa-dev 
          - libpng-dev 
          - libssh-dev 
          - unixodbc-dev 
          - xsltproc 
          - fop 
          - libxml2-utils 
          - libncurses-dev 
          - openjdk-11-jdk
        state: present

    - name: Install asdf erlang
      become: no
      command: $HOME/.asdf/bin/asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git
      args:
        creates: $HOME/.asdf/plugins/erlang
    
    - name: asdf elixir deps
      apt: 
       name: 
         - unzip
       state: present

    - name: Install asdf elixir
      become: no
      command: $HOME/.asdf/bin/asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git
      args:
        creates: $HOME/.asdf/plugins/elixir

    - name: asdf ruby deps
      apt:
       name:
         - autoconf 
         - bison 
         - build-essential 
         - libssl-dev 
         - libyaml-dev 
         - libreadline6-dev 
         - zlib1g-dev 
         - libncurses5-dev 
         - libffi-dev 
         - libgdbm6 
         - libgdbm-dev 
         - libdb-dev
       state: present

    - name: install asdf ruby
      become: no
      command: $HOME/.asdf/bin/asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git
      args:
        creates: $HOME/.asdf/plugins/ruby

    - name: Copy file with owner and permissions
      become: no
      copy:
        src: /home/thiago/dev/thiamsantos/dotfiles/files/asdfrc
        dest: /home/thiago/.asdfrc

    - name: Install nvm
      become: no
      shell: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Install node lts
      become: no
      shell: . $HOME/.nvm/nvm.sh && nvm install 12.19.0
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v12.19.0"

    - name: Install fzf
      become: no
      shell: git clone --depth 1 https://github.com/junegunn/fzf.git $HOME/.fzf && $HOME/.fzf/install
      args:
        creates: "{{ ansible_env.HOME }}/.fzf/bin/fzf"

    - name: Change .config folder permission
      file:
        path: $HOME/.config
        owner: "thiago"
        group: "thiago"

    - name: Install yvm
      become: no
      shell: . $HOME/.nvm/nvm.sh && nvm use 12.19.0 && curl -s https://raw.githubusercontent.com/tophat/yvm/master/scripts/install.js | node
      args:
        creates: "{{ ansible_env.HOME }}/.yvm/yvm.sh"

    - name: Install vlc
      apt:
        name: vlc
        state: present
    
    - name: Install bluetooth tool
      apt:
        name:
          - bluez 
          - bluez-tools
          - blueman
        state: present

    - name: Install rust
      become: no
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
      args:
        creates: "{{ ansible_env.HOME }}/.cargo/bin"

    - name: Download the Go tarball
      get_url:
        url: "{{ go_download_location }}"
        dest: /usr/local/src/{{ go_tarball }}
        checksum: "{{ go_tarball_checksum }}"

    - name: Extract the Go tarball
      unarchive:
        src: /usr/local/src/{{ go_tarball }}
        dest: /usr/local
        copy: no
        creates: /usr/local/go

    - name: Install tmux deps
      apt:
        name:
          - libevent-dev
          - ncurses-dev
          - build-essential
          - bison
          - pkg-config
        state: present

    - name: Create local folder
      become: no
      file:
        path: /home/thiago/local/src
        state: directory

    - name: Create bin folder
      become: no
      file: 
        path: /home/thiago/bin
        state: directory

    - name: Install tmux
      apt:
       name: tmux
       state: present
     
    - name: Install tmux plugin manager
      become: no
      shell: mkdir -p $HOME/.tmux/plugins && git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
      args:
        creates: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"

    - name: Setup tmux.conf
      become: no
      file:
        src: "{{ ansible_env.HOME }}/dev/thiamsantos/dotfiles/files/tmux.conf"
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
        state: link

    - name: Remove old docker
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Add docker apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add specified repository into sources list using specified filename
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
        filename: docker

    - name: Install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure group docker exists
      group:
        name: docker
        state: present

    - name: Add thiago to docker group
      user:
        name: thiago
        groups: docker
        append: yes

    - name: Download the docker compose
      become: no
      get_url:
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
        dest: /home/thiago/bin/docker-compose
        mode: 'a+x'
        checksum: sha256:04216d65ce0cd3c27223eab035abfeb20a8bef20259398e3b9d9aa8de633286d

    - name: Install zsh
      apt: 
        name: zsh
        state: present

    - name: Install oh-my-zsh
      become: no
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "{{ ansible_env.HOME }}/.oh-my-zsh"

    - name: Install zsh-syntax-highlighting
      become: no
      shell: "git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ ansible_env.HOME}}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      args:
        creates: "{{ ansible_env.HOME}}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

    - name: Install zsh-autosuggestions
      become: no
      shell: "git clone https://github.com/zsh-users/zsh-autosuggestions {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
      args: 
        creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

    - name: Setup zshrc
      become: no
      file:
        src: "{{ ansible_env.HOME }}/dev/thiamsantos/dotfiles/files/zshrc"
        dest: "{{ ansible_env.HOME }}/.zshrc"
        state: link

    - name: Install pure prompt
      become: no
      shell: mkdir -p "{{ ansible_env.HOME }}/.zsh" && git clone https://github.com/sindresorhus/pure.git "{{ ansible_env.HOME }}/.zsh/pure"
      args:
        creates: "{{ ansible_env.HOME }}/.zsh/pure"
